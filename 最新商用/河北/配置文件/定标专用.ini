
;******************************************河北省配置文件V10.01.15******************************************
[配置文件版本号]
;配置文件版本号
Config_File_Version = V10.02.02.00

[系统配置]
;IP地址
Ip_addr = 192.168.9.209
;子网掩码			
Mask = 255.255.255.0	
;网关			
Gateway = 192.168.9.1
;端口1			
Net_port1 = 9527  
;端口2          	
Net_port2 = 3002  	
;重读时间			
Wait_time = 20   
;车道模式
lane_mode = 3
;功率    			
Tx_power = 20    	
;信道		
Pll_channell_ID = 0 	
;GB_GD_MODE
gb_gd_mode = 0
;交易模式 09复合交易模式
trans_class = 09
;发射功率修正值
TxPowerModifyVal = 0
;BST间隔		
Bstinterval = 10     			
;省份代码
Province_code[4] = BA.D3.B1.B1  “河北”
;上电默认通讯口 0: 串口 1: 网口
RSU_starting_up_port = 1
;unix起始时间0: 1970年 1: 2000年
unix_start_time = 0
;VC帧重发时间-ms; 默认120
etc_2_vc_timeout[2] =  0
;天线安装角度，单位：度
antenna_angle = 45
;天线安装高度，单位：dm（分米）
antenna_height = 60

[天线类型]
;U+天线特性 0: 关闭 1: 开启
U_INT = 0           
;同步天线特性 0: 关闭 1: 开启        	
SYNC = 1				
;相控阵天线特性 0: 关闭 1: 开启		
PHASED_ARRAYS_MODE = 0			
;交易模式 0: 集成 1: 透传
Business_mode = 0

[功能配置]
;安防校验 0: 关闭 1: 开启
Psam_protect = 0	
;相控阵信息输出开关 0: 关闭 1: 开启				
XKZ_info_enable = 0		
;心跳帧开关 0: 关闭 1: 开启			
Heart_beat_enable = 1	
;B2B3一起上报功能开关 0: 关闭 1: 开启			
B2_B3_to_pc_enable = 0		
;车道逻辑配置: [是否带地感逻辑|是否带地感帧|天线切换区域个数] 0: 不带 1: 带|是否带地感帧 0: 不带 1: 带|天线切区域个数{1-6} 	
Lane_logic = 00|00|00	
;成功交易OBU抑制开关 0: 关闭 1: 开启		
Success_OBU_restrain_enable = 1			
;标准化车道通讯方式
Stand_lande_FT3_flg = 0
;读取EF04长度高字节
READ_EF04_LENG[0] = 00
;读取EF04长度低字节,16个标识点 9+16*6
READ_EF04_LENG[1] = 00
;读取0008长度,20个标识点 1+2+20*2
READ_0008_LENG = 0
;读取0009长度低字节
READ_0009_LENG[0]= 00
;读取0009长度高字节
READ_0009_LENG[1]= 0
;清EF04长度
WRITE_EF04_LENG = 0
;清0008长度
WRITE_0008_LENG = 0
;清0009长度
WRITE_0009_LENG = 0
;读0019第几号记录文件
write_file_record_num = 00
;写0019第几号记录文件
read_file_record_num = 00
;VC写过站信息是否为0019文件后40字节 0:为43字节 1: 为后40字节
write0019_cmd_type = 0
;标识站读取类型//8bit: 00000111 低三位分别代表读取0009、0008、EF04
beacon_read_type = 0
;标识站清除类型//8bit: 00000111 低三位分别代表清0009、0008、EF04
beacon_clear_type = 0
;读取000A长度
READ_000A_LENG = 0
;写000A长度
WRITE_000A_LENG = 0
;读0011文件长度
READ_0011_LENG = 0
;访问PSAM卡是否使用默认波特率
DEFELT_FIDI_flag = 0

;致命错误日志开关 0关闭 1打开
err_log_flg = 0
;警告日志开关 0关闭 1打开
warn_log_flg = 0
;调试日志开关 0关闭 1打开
info_log_flg = 0
;设备信息开关 0关闭 1打开
debug_log_flg = 0

;读001B文件长度
READ_001B_LENG = 0
;数据帧序列号是否连续变化
data_rsctl_change = 0
;心跳时间(单位为秒)
heart_time = 30
;RSUID固定1或可变0,默认0;(RSUID固定,OBU交易后对天线抑制一段时间(BST时间差),表现为OBU不回VST)
;2-交易失败变ID
rsuid_fixed_flag = 3
;PassMode解VC帧数据偏移,默认2;(透传模式时有效,F2帧偏移位数,用于组Transfer.rq帧)
passmode_dsrc_data_offset_val = 2
;----------------------------------------------------
;range_min
pose_x[4] = 100
;range_mid
pose_y[4] = 600
;DISTANCE_SET(2)设置地感距离min和mid
pose_report_flg = 2
;最大允许重发次数
l2_resend_times_max = 10
;DSRC重发时间,单位毫秒
dsrc_resend_time = 20
;重发间隔递增时长
l2_inc_time_val = 0
;透传模式VST和GetSecure.rs一起上报开关0/1
passmode_vst_getsec = 0
;二次认证开关,默认为0关闭
second_authen = 0
;读车辆信息长度加0
getsecure_add_Len = 0
;网口上电后报帧序列为09的B0帧  #1
send_09_B0 = 2
;要抑制的收费路网号 32,01 #2 3
Road_network_Num[2]= 00|00
;要抑制的收费站号 0A,08 #4 5
Station_Num[2]= 00|00
;要抑制的车道号41 #6
Lane_Num = 01
;是否打印抑制车辆 #7
Print_Switch=0
;清08文件失败不上报错误码，继续交易 #8
ignore_clear_08_err=0
;透传不上报Setmmmi回复
notsend_setmmi=0
;清EF04和0009写入首字节              
province_code=0               
;预留字段 
;--------------i0-i1-i2-i3-i4-i5-i6-ok-ok-i9-10-ok-12-13-14-15-16-17-ok
;--------------i0-i1-i2-i3-i4-i5-i6-j0-j1-j2-j3-j4-j5-j6-j7-j8-j9-10-11
reserved[30] = 00|01|194|00|00|00|00|00|00|00|00|00|00|00|00|00|00|00|00

;-------------------------------------------
;------------------0-1---2--3--4--5--6--7--8--9-10-11-12
radar_func[18] = 01|02|00|00|00|105|95|40|90|01|00|01|01


[bst配置]	 
;预处理操作参数	
indicator = 48		
;预读系统信息文件长度	
Sys_info_file_length = 26				
;ICC卡交易模式(枚举值: 87H)					
ICC_trans_mode = 135	
;0002文件预读配置(偏移量|预读长度)		
Read_file0002 = 00|00
;0012文件预读配置(偏移量|预读长度)		
Read_file0012 = 00|00
;0015文件预读配置(偏移量|预读长度)		
Read_file0015 = 00|43
;0019文件预读配置(偏移量|预读长度)		
Read_file0019 = 00|14
;RSUID
Beacon_id = 0x12000000	


;********************************************解VC帧配置*****************************************
[VC帧解包配置]
VC帧个数 = 9

;RSU初始化帧
VC帧名称1    = 0xC0
;数据元个数
VC帧包头1    = 7
;数据位置 | 数据长度 | 该字段在程序中的变量的顺序
;Datetime_UNIX
VC帧包体1_1  = 01|04|01
;Datetime
VC帧包体1_2  = 05|07|02
;LaneMode 
VC帧包体1_3  = 12|01|03
;BSTInterval
VC帧包体1_4  = 13|01|08
;TxPower
;VC帧包体1_5  = 14|01|05
;PLLChannelID
;VC帧包体1_6  = 15|01|06
;TransMode
;VC帧包体1_7  = 16|01|13
;EF04Opt--取值不一样
VC帧包体1_5  = 17|01|15
;EF04Offset,读取偏移
VC帧包体1_6  = 18|02|16
;EF04Len
VC帧包体1_7 = 20|02|10
;执行动作代码: 01 :action数量|01:C0初始化
Action_code1 = 02|101|01

;RSU继续交易帧
VC帧名称2    =  0xC1
;数据元个数
VC帧包头2    = 2
;数据位置 | 数据长度 | 该字段在程序中的变量的顺序
;OBUID
VC帧包体2_1  = 01|04|31
;OBU一级分散因子
VC帧包体2_2  = 05|08|32
;执行动作代码: 01 :action数量|02:继续交易帧处理
Action_code2 = 01|102

;RSU停止交易帧
VC帧名称3    =  0xC2
;数据元个数
VC帧包头3    = 2
;数据位置 | 数据长度 | 该字段在程序中的变量的顺序
;OBUID
VC帧包体3_1  = 01|04|31
;StopType
VC帧包体3_2  = 05|01|51
;执行动作代码: 01 :action数量|03:停止交易帧处理
Action_code3 = 01|103

;开天线指令
VC帧名称4    =  0x4C
;数据元个数
VC帧包头4    = 1
;数据位置 | 数据长度 | 该字段在程序中的变量的顺序
;RSUGate
VC帧包体4_1  = 01|01|111
;执行动作代码: 01 :action数量|01:开关天线操作
Action_code4 = 01|01


;消费及写过站信息指令
VC帧名称5    =  0xC6
;数据元个数
VC帧包头5    = 9
;数据位置 | 数据长度 | 该字段在程序中的变量的顺序
;OBUID
VC帧包体5_1  = 01|04|31
;CardDivFactor
VC帧包体5_2  = 05|08|75
;WriteRecord
;VC帧包体5_3  = 13|01|76
;ConsumeMoney
VC帧包体5_3  = 14|04|72
;PurchaseTime
VC帧包体5_4  = 18|07|73
;StationInfo
VC帧包体5_5  = 25|63|74
;OBUTradeType
VC帧包体5_6  = 88|01|79
;EF04Off
VC帧包体5_7  = 89|02|80
;EF04Len
VC帧包体5_8  = 91|02|81
;EF04Info
VC帧包体5_9 = 93|200|82
;执行动作代码: 01 :action数量|51:DSRC下行业务处理
Action_code5 = 01|51


;异常处理C7-取TAC-出口
VC帧名称6    =  0xC7
;数据元个数
VC帧包头6    = 1
;数据位置 | 数据长度 | 该字段在程序中的变量的顺序
;OBUID
VC帧包体6_1  = 01|04|31
;WriteRecord
;VC帧包体6_2  = 05|01|76
;执行动作代码: 01 :action数量|51:DSRC下行业务处理
Action_code6 = 01|51


;PSAM授权初始化CD
VC帧名称7    =  0xCD
;数据元个数
VC帧包头7    = 0
;数据位置 | 数据长度 | 该字段在程序中的变量的顺序
;执行动作代码: 01 :action数量|51:DSRC下行业务处理
Action_code7 = 01|134


;PSAM授权CF
VC帧名称8    =  0xCF
;数据元个数
VC帧包头8    = 1
;数据位置 | 数据长度 | 该字段在程序中的变量的顺序
;MAC_Code
VC帧包体8_1  = 01|08|78
;执行动作代码: 01 :action数量|51:DSRC下行业务处理
Action_code8 = 01|108


;取EF04通行省份信息指令，出口B5下，读拆分
VC帧名称9    =  0xCA
;数据元个数
VC帧包头9    = 3
;数据位置 | 数据长度 | 该字段在程序中的变量的顺序
;OBUID
VC帧包体9_1  = 01|04|31
;EF04Off
VC帧包体9_2  = 05|02|17
;EF04ReadLen
VC帧包体9_3  = 07|02|18
;执行动作代码: 01 :action数量|51:DSRC下行业务处理
Action_code9 = 02|131|51

[VC帧组包配置]
VC帧个数 = 10

;设备状态信息帧
VC帧名称1  =  0x08
;数据元个数
VC帧包头1  = 13 
;RSCT
;数据类型 01: 常量 02: 变量|数据偏移|数据长度|发送位置偏移|数据元内容
VC帧包体1_1 = 01|00|0001|0000|0x08
;Frame_Cmd
VC帧包体1_2 = 01|00|0001|0001|0xB0
;RSUStatus
VC帧包体1_3 = 01|00|0001|0002|0x00
;RSUTerminalID--3des
VC帧包体1_4 = 02|00|0006|0003|0x0B
;RSUTerminalID--SM4
VC帧包体1_5 = 02|00|0006|0009|0x0C
;PSAM_Ver
VC帧包体1_6 = 02|00|0001|0015|0x69
;RSUAlgld
VC帧包体1_7 = 01|00|0001|0016|0x00
;RSUManuID
VC帧包体1_8 = 02|00|0001|0017|0x06
;RSUIndividualID
VC帧包体1_9 = 02|01|0003|0018|0x06
;RsuVersion
VC帧包体1_10 = 02|00|0002|0021|0x07
;RSUHardWareVersion--硬件版本号
VC帧包体1_11 = 02|00|0002|0023|0x0D
;Authorization--授权是否成功
VC帧包体1_12 = 02|00|0001|0025|0x74
;Reserved
VC帧包体1_13 = 01|00|0001|0026|0x00
;执行动作代码: 00 :action数量|00:无操作
Action_code1 = 00|00

;VST信息帧
VC帧名称2  =  0x28
;数据元个数|代码指令
VC帧包头2  = 12
;RSCTL
;数据类型 01: 常量 02: 变量|数据偏移|数据长度|发送位置偏移|数据元内容
VC帧包体2_1 = 01|00|0001|0000|0x18
;Frame_Cmd
VC帧包体2_2 = 01|00|0001|0001|0xB2
;OBUID
VC帧包体2_3 = 02|00|0004|0002|0x16
;ErrorCode
VC帧包体2_4 = 02|00|0001|0006|0x15
;IssuerIdentifier, ContractProvider 发行商代码
VC帧包体2_5 = 02|00|0008|0007|0x17
;ConstractType - 合约类型
VC帧包体2_6 = 02|00|0001|0015|0x1D
;ConstractVersion  - 合同版本
VC帧包体2_7 = 02|00|0001|0016|0x1E
;SerialNumber
VC帧包体2_8 = 02|00|0008|0017|0x18
;DateofIssue
VC帧包体2_9 = 02|00|0004|0025|0x19
;DateofExpire
VC帧包体2_10 = 02|00|0004|0029|0x1A
;Equipmentstatus
VC帧包体2_11 = 02|00|0001|0033|0x1B
;OBUStatus
VC帧包体2_12 = 02|00|0002|0034|0x1C
;执行动作代码: 00 :action数量|00:无操作
Action_code2 = 00|00

;OBU信息帧
VC帧名称3  =  0x38
;数据元个数|代码指令
VC帧包头3  = 18
;RSCTL
;数据类型 01: 常量 02: 变量|数据偏移|数据长度|发送位置偏移|数据元内容
VC帧包体3_1 = 01|00|0001|0000|0x28
;Frame_Cmd
VC帧包体3_2 = 01|00|0001|0001|0xB3
;OBUID
VC帧包体3_3 = 02|00|0004|0002|0x16
;ErrorCode
VC帧包体3_4 = 02|00|0001|0006|0x29
;VehicleLicence PlateNumber
VC帧包体3_5 = 02|00|0012|0007|0x2A
;VehicleLicencePlateColor
VC帧包体3_6 = 02|00|0002|0019|0x2B
;VehicleClass
VC帧包体3_7 = 02|00|0001|0021|0x2C
;VehicleUserType
VC帧包体3_8 = 02|00|0001|0022|0x2D
;VehicleDimensions
VC帧包体3_9 = 02|00|0004|0023|0x2E
;VehicleWheels
VC帧包体3_10 = 02|00|0001|0027|0x2F
;VehicleAxles
VC帧包体3_11 = 02|00|0001|0028|0x30
;VehicleWheelBase
VC帧包体3_12 = 02|00|0002|0029|0x31
;VehicleWeightLimit
VC帧包体3_13 = 02|00|0003|0031|0x32
;VehicleSpecificInformation
VC帧包体3_14 = 02|00|0016|0034|0x33
;VehicleEngineNumber
VC帧包体3_15 = 02|00|0016|0050|0x34
;TruckInfo
VC帧包体3_16 = 02|00|0003|0066|0x35
;Vehicleother
VC帧包体3_17 = 02|00|0016|0069|0x36
;Vehiclehigh
VC帧包体3_18 = 02|00|0001|0085|0x37
;执行动作代码: 00 :action数量|00:无操作
Action_code3 = 00|00

;ICC卡信息帧
VC帧名称4  =  0x48
;数据元个数|代码指令
VC帧包头4  = 9
;RSCTL
;数据类型 01: 常量 02: 变量 03:可固定偏移和长度的变量 |数据偏移|数据长度|发送位置偏移|数据元内容
VC帧包体4_1 = 01|00|0001|0000|0x38
;Frame_Cmd
VC帧包体4_2 = 01|00|0001|0001|0xB4   
;OBUID
VC帧包体4_3 = 02|00|0004|0002|0x16
;ErrorCode
VC帧包体4_4 = 02|00|0001|0006|0x3D
;TransType
VC帧包体4_5 = 01|00|0001|0007|0x10
;CardRestMoney
VC帧包体4_6 = 02|00|0004|0008|0x58
;IssuerInfo 前43字节卡片发行信息 15文件
VC帧包体4_7 = 02|00|0050|0012|0x43
;LastStation 收费信息 19文件
VC帧包体4_8 = 02|00|0063|0062|0x44
;File_EF04_pack,
VC帧包体4_9	= 02|00|0001|0125|0x45
;执行动作代码: 00 :action数量|00:无操作
Action_code4 = 00|00

;交易信息帧
VC帧名称5  =  0x58
;数据元个数|代码指令
VC帧包头5  = 14
;RSCTL
VC帧包体5_1 = 01|00|0001|0000|0x48
;Frame_Cmd
VC帧包体5_2 = 01|00|0001|0001|0xB5
;OBUID
VC帧包体5_3 = 02|00|0004|0002|0x16
;ErrorCode
VC帧包体5_4 = 02|00|0001|0006|0x51
;psam终端机编号
VC帧包体5_5 = 02|00|0006|0007|0x53
;TransTime
VC帧包体5_6 = 02|00|0007|0013|0x54
;TransType
VC帧包体5_7 = 01|00|0001|0020|0x09
;Tac
VC帧包体5_8 = 02|00|0004|0021|0x55
;ICCPayserial
VC帧包体5_9 = 02|00|0002|0025|0x56
;PsamTransSerial
VC帧包体5_10 = 02|00|0004|0027|0x57
;CardRestMoney
VC帧包体5_11 = 02|00|0004|0031|0x58
;Keytype
VC帧包体5_12 = 02|00|0001|0035|0x59
;KeyVer
VC帧包体5_13 = 02|00|0001|0036|0x69
;EF04UpdateStatus
VC帧包体5_14 = 02|00|0001|0037|0x5A
;执行动作代码: 00 :action数量|00:无操作
Action_code5 = 00|00


;OBU拆分信息--有回复C1
VC帧名称6  =  0x18
;数据元个数|代码指令
VC帧包头6  = 5
;RSCTL
;数据类型 01: 常量 02: 变量|数据偏移|数据长度|发送位置偏移|数据元内容
VC帧包体6_1 = 01|00|0001|0000|0x98
;Frame_Cmd
VC帧包体6_2 = 01|00|0001|0001|0xBA
;OBUID
VC帧包体6_3 = 02|00|0004|0002|0x16
;error_code_BA
VC帧包体6_4 = 02|00|0001|0006|0x91
;EF04_info
VC帧包体6_5 = 02|00|0001|0007|0x90
;执行动作代码: 00 :action数量|00:无操作
Action_code6 = 00|00


;PSAM授权初始化-BD
VC帧名称7  =  0xD8
;数据元个数|代码指令
VC帧包头7  = 6
;RSCTL
;数据类型 01: 常量 02: 变量|数据偏移|数据长度|发送位置偏移|数据元内容
VC帧包体7_1 = 01|00|0001|0000|0x68
;Frame_Cmd
VC帧包体7_2 = 01|00|0001|0001|0xBD
;ErrorCode
VC帧包体7_3 = 02|00|0001|0002|0x67
;PSAM_NO序列号
VC帧包体7_4 = 02|00|0010|0003|0x68
;AreaCode
VC帧包体7_5 = 02|00|0008|0013|0x6A
;RandCode
VC帧包体7_6 = 02|00|0008|0021|0x6B
;执行动作代码: 00 :action数量|00:无操作
Action_code7 = 00|00

;PSAM授权回复-BF
VC帧名称8  =  0xF8
;数据元个数|代码指令
VC帧包头8  = 4
;RSCTL
;数据类型 01: 常量 02: 变量|数据偏移|数据长度|发送位置偏移|数据元内容
VC帧包体8_1 = 01|00|0001|0000|0x78
;Frame_Cmd
VC帧包体8_2 = 01|00|0001|0001|0xBF
;ErrorCode
VC帧包体8_3 = 02|00|0001|0002|0x6C
;Authen_TimeCos
VC帧包体8_4 = 02|00|0002|0003|0x6D
;执行动作代码: 00 :action数量|00:无操作
Action_code8 = 00|00

;标识点信息帧-B7
VC帧名称9  =  0x17
;数据元个数|代码指令
VC帧包头9  = 6
;RSCTL
;数据类型 01: 常量 02: 变量|数据偏移|数据长度|发送位置偏移|数据元内容
VC帧包体9_1 = 01|00|0001|0000|0x18
;Frame_Cmd
VC帧包体9_2 = 01|00|0001|0001|0xD0
;OBUID
VC帧包体9_3 = 02|00|0004|0002|0x16
;NextFrameType
VC帧包体9_4 = 01|00|0001|0006|0xB2
;nMark
VC帧包体9_5 = 02|00|0001|0007|0x01
;Location
VC帧包体9_6 = 01|00|0008|0008|0x0000000000000000
;执行动作代码: 00 :action数量|00:无操作
Action_code9 = 00|00

;交易信息帧
VC帧名称10  =  0x59
;数据元个数|代码指令
VC帧包头10  = 14
;RSCTL
VC帧包体10_1 = 01|00|0001|0000|0x48
;Frame_Cmd
VC帧包体10_2 = 01|00|0001|0001|0xB5
;OBUID
VC帧包体10_3 = 02|00|0004|0002|0x16
;ErrorCode
VC帧包体10_4 = 02|00|0001|0006|0x51
;psam终端机编号
VC帧包体10_5 = 02|00|0006|0007|0x53
;TransTime
VC帧包体10_6 = 02|00|0007|0013|0x54
;TransType
VC帧包体10_7 = 01|00|0001|0020|0x09
;Tac
VC帧包体10_8 = 02|00|0004|0021|0x55
;ICCPayserial
VC帧包体10_9 = 02|00|0002|0025|0x56
;PsamTransSerial
VC帧包体10_10 = 02|00|0004|0027|0x57
;CardRestMoney
VC帧包体10_11 = 02|00|0004|0031|0x58
;Keytype
VC帧包体10_12 = 02|00|0001|0035|0x59
;KeyVer
VC帧包体10_13 = 02|00|0001|0036|0x69
;EF04UpdateStatus
VC帧包体10_14 = 01|00|0001|0037|0x01
;执行动作代码: 00 :action数量|00:无操作
Action_code10 = 00|00

[Getsecure解帧配置]
;修改交易状态:  WAIT_VC_READICC19_RQ(3)
Modification_business_status = 3
	
[Transfer组帧配置]
Transfer组帧配置个数 = 18
;适用条件的数量
;适用条件1:是否内部调用 0: 内部调用 1: 外部触发
;适用条件2:适用VC帧: 0xC1:继续交易帧 
;适用条件3:适用的交易状态: 
;适用条件4:出入口状态: 0xAA: 无此适用条件区分  03: 入口 04: 出口 08: 合建站|
;适用条件5:军车状态:  0xAA: 无此适用条件区分 00: 非军车 01: 军车|
;适用条件6:OBU省份状态: 0xAA: 无此适用条件区分 01: 本省 02: 外省
;适用条件7:Card_type 0xAA: 无此适用条件区分 00：无卡 01: GBCard、02:4xCard新国标|
;适用条件8:标识站读取类型  8bit: 00000111 低三位分别代表读取0009、0008、EF04
;适用条件9:标识站清除类型  8bit: 00000111 低三位分别代表清除0009、0008、EF04
;适用条件10:再次读取标识站信息: 0xAA: 无此适用条件区分，00不读 01再次读取/EF04标识站读取,02-EF04标识站+省界站读取,03-EF04省界站读取
;适用条件11:开0009文件目录: 0xAA: 无此适用条件区分 00不开 01开
;适用条件12:开ef04文件目录: 0xAA: 无此适用条件区分 00不开 01开
;适用条件13:进行二次外部认证: 0xAA: 无此适用条件区分 00不认证 01认证
;适用条件14:写001C标志
;适用条件15:写EF04与复合消费标志：0xAA: 无此适用条件区分 00-写EF04+复合消费 01-仅写EF04 02-仅进行复合消费 03-复合消费上报B5后写EF04

;WAIT_VC_READICC19_RQ(3)
;无卡不读19文件，不读EF04，直接上B4
;-------------0-1---2----3----4----5----6----7----8----9---10---11---12---13---14---15---
Condition1 = 16|1|0xC1|0x03|0xAA|0xAA|0xAA|0x00|0x00|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA
;APDU_NUM
Apdu1_num = 0
;Apdu_type 
Apdu1_type = 00
;修改交易状态: WAIT_VC_C6(13)
Modification_business_status1 = 13
;执行动作代码: 00 :action数量|00:等待OBU回复
Action_code1 = 01|105

;WAIT_VC_READICC19_RQ(3)
;无卡不读19文件，直接读EF04，代码中直接写死错误码
;-------------0-1---2----3----4----5----6----7----8----9---10---11---12---13---14---15
Condition2 = 16|1|0xC1|0x03|0xAA|0xAA|0xAA|0x00|0x01|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA
;APDU_NUM
Apdu2_num = 2
;Apdu_type SELECT_EF04_FILE(54)
Apdu2_type = 54
;Apdu_type READ_EF04(50)
Apdu2_type_02 = 50
;修改交易状态: WAIT_OBU_READESAM04_RS(6)
Modification_business_status2 = 6
;执行动作代码: 00 :action数量|00:等待OBU回复
Action_code2 = 00|00


;WAIT_VC_READICC19_RQ(3)
;读19文件，读02
;-------------0-1---2----3----4----5----6----7----8----9---10---11---12---13---14---15
Condition3 = 16|1|0xC1|0x03|0xAA|0xAA|0xAA|0x01|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA
;APDU_NUM
Apdu3_num = 2
;Apdu_type READ_FLIE0019_RECORD0(2)
Apdu3_type = 2
;Apdu_type CHECK_BALANCE(43)
Apdu3_type_02 = 43
;修改交易状态: WAIT_OBU_READICC19_RS(4)
Modification_business_status3 = 4
;执行动作代码: 00 :action数量|00:等待OBU回复
Action_code3 = 00|00

;WAIT_VC_READICC19_RQ(3)
;读19文件,02,15文件--4X卡
;-------------0-1---2----3----4----5----6----7----8----9---10---11---12---13---14---15
Condition4 = 16|1|0xC1|0x03|0xAA|0xAA|0xAA|0x02|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA
;APDU_NUM
Apdu4_num = 3
;Apdu_type READ_FLIE0019_RECORD0(2)
Apdu4_type = 2
;Apdu_type CHECK_BALANCE(43)
Apdu4_type_02 = 43
;Apdu_type EAD_0015_FLIE(56)
Apdu4_type_03 = 56
;修改交易状态: WAIT_OBU_READICC19_RS(4)
Modification_business_status4 = 4
;执行动作代码: 00 :action数量|00:等待OBU回复
Action_code4 = 00|00

;WAIT_OBU_READESAM04_RQ(5)
;读EF04开目录读取--C0要求读EF04
;-------------0-1---2----3----4----5----6----7----8----9---10---11---12---13---14---15
Condition5 = 16|0|0x00|0x05|0xAA|0xAA|0xAA|0xAA|0x01|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA
;APDU_NUM
Apdu5_num = 2
;Apdu_type SELECT_EF04_FILE(54)
Apdu5_type = 54
;Apdu_type READ_EF04(50)
Apdu5_type_02 = 50
;修改交易状态: WAIT_OBU_READESAM04_RS(6)
Modification_business_status5 = 6
;执行动作代码: 00 :action数量|00:等待OBU回复
Action_code5 = 00|00

;------------------------------下发B4后-----------------------------------------------------------------------------------------------
;WAIT_VC_C6(13)
;选EF04目录，第一次写EF04-C6后写EF04-模式0
;-------------0-1---2----3----4----5----6----7----8----9---10---11---12---13---14---15
Condition6 = 16|1|0xC6|0x0D|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0x00|0xAA
;APDU_NUM
Apdu6_num = 2
;Apdu_type SELECT_EF04_FILE(54)
Apdu6_type = 54
;Apdu_type WRITE_EF04_FILE(73)
Apdu6_type_02 = 73
;修改交易状态: WAIT_OBU_SELECT_READ_EF04_RS(40)
Modification_business_status6 = 40
;执行动作代码: 00 :action数量|00:等待OBU回复
Action_code6 = 00|00

;WAIT_VC_C6(13)
;选EF04目录,第一次写EF04--C6后写EF04-模式1
;-------------0-1---2----3----4----5----6----7----8----9---10---11---12---13---14---15
Condition7 = 16|1|0xC6|0x0D|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0x01|0xAA
;APDU_NUM
Apdu7_num = 2
;Apdu_type SELECT_EF04_FILE(54)
Apdu7_type = 54
;Apdu_type WRITE_EF04_FILE(73)
Apdu7_type_02 = 73
;修改交易状态: WAIT_OBU_SELECT_READ_EF04_RS(40)
Modification_business_status7 = 40
;执行动作代码: 00 :action数量|00:等待OBU回复
Action_code7 = 00|00

;WAIT_OBU_WRITE_EF04_RQ(52)
;再次写EF04
;-------------0-1---2----3----4----5----6----7----8----9---10---11---12---13---14---15
Condition8 = 16|0|0x00|0x34|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA
;APDU_NUM
Apdu8_num = 1
;Apdu_type WRITE_EF04_FILE(73)
Apdu8_type = 73
;修改交易状态: WAIT_OBU_WRITE_EF04_RS(53)
Modification_business_status8 = 53
;执行动作代码: 00 :action数量|00:等待OBU回复
Action_code8 = 00|00


;WAIT_VC_C6(13)
;消费初始化-C6后消费-模式2,3
;--------------0-1---2----3----4----5----6----7----8----9---10---11---12---13---14---15
Condition9 = 16|1|0xC6|0x0D|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA
;APDU_NUM
Apdu9_num = 2
;Apdu_type PAY_INIT(41)
Apdu9_type = 41
;Apdu_type WRITE_FLIE0019_RECORD0(22)
Apdu9_type_02 = 22
;修改交易状态: WAIT_OBU_PAY_NINT_RS(15)
Modification_business_status9 = 15
;执行动作代码: 00 :action数量|00:等待OBU回复
Action_code9 = 00|00

;WAIT_VC_PAY_INIT_RQ(14)
;更新EF04后，消费初始化--模式0
;-------------0-1--2----3----4----5----6-----7----8----9---10---11---12---13---14---15
Condition10 = 16|0|0x03|0x0E|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0x00|0xAA
;APDU_NUM
Apdu10_num = 2
;Apdu_type PAY_INIT(41)
Apdu10_type = 41
;Apdu_type WRITE_FLIE0019_RECORD0(22)
Apdu10_type_02 = 22
;修改交易状态: WAIT_OBU_PAY_NINT_RS(15)
Modification_business_status10 = 15
;执行动作代码: 00 :action数量|00:等待OBU回复
Action_code10 = 00|00

;WAIT_VC_PAY_RQ(28)
;消费,取余额
;--------------0-1---2----3----4----5----6----7----8----9---10---11---12---13---14---15
Condition11 = 16|0|0x00|0x1C|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA
;APDU_NUM
Apdu11_num = 2
;Apdu_type PAY_CMD(42)
Apdu11_type = 42
;Apdu_type CHECK_BALANCE(43)
Apdu11_type_02 = 43
;修改交易状态: WAIT_OBU_PAY_RS(29)
Modification_business_status11 = 29
;执行动作代码: 00 :action数量|00:等待OBU回复
Action_code11 = 00|00

;WAIT_OBU_CLEAR_ESM04_RQ(16)
;选EF04目录，第一次写EF04-消费后写EF04-模式3
;-------------0-1---2----3----4----5----6----7----8----9---10---11---12---13---14---15
Condition12 = 16|0|0x00|0x10|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0x03|0xAA
;APDU_NUM
Apdu12_num = 2
;Apdu_type SELECT_EF04_FILE(54)
Apdu12_type = 54
;Apdu_type WRITE_EF04_FILE(73)
Apdu12_type_02 = 73
;修改交易状态: WAIT_OBU_SELECT_READ_EF04_RS(40)
Modification_business_status12 = 40
;执行动作代码: 00 :action数量|00:等待OBU回复
Action_code12 = 00|00

;WAIT_VC_C6(13)
;等待C6时收到C7重新取TAC，初始化
;--------------0-1---2----3----4----5----6----7----8----9---10---11---12---13---14---15
Condition13 = 16|1|0xC7|0x0D|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA
;APDU_NUM
Apdu13_num = 1
;Apdu_type GET_TAC_INIT(44)
Apdu13_type = 44
;修改交易状态: WAIT_OBU_PAY_INIT_FOR_TAC_RS(35)
Modification_business_status13 = 35
;执行动作代码: 00 :action数量|00:等待OBU回复
Action_code13 = 00|00

;WAIT_OBU_GET_TAC_RQ(31)
;取TAC码
;--------------0-1---2----3----4----5----6----7----8----9---10---11---12---13---14---15
Condition14 = 16|0|0x00|0x1F|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA
;APDU_NUM
Apdu14_num = 1
;Apdu_type GET_TAC(45)
Apdu14_type = 45
;修改交易状态: WAIT_OBU_GET_TAC_RS(36)
Modification_business_status14 = 36
;执行动作代码: 00 :action数量|00:等待OBU回复
Action_code14 = 00|00

;-------------------------下发B5后--------------------------------------------------------------------------------------------------------
; WAIT_VC_CE(51)
;等待C1，下发SETMMI--入口
;--------------0-1---2----3----4----5----6----7----8----9---10---11---12---13---14---15
Condition15 = 16|1|0xC1|0x33|0x03|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA
;APDU_NUM
Apdu15_num = 0
;Apdu_type 
Apdu15_type = 00
;修改交易状态:  WAIT_OBU_SETMMI_RS(33)
Modification_business_status15 = 33
;执行动作代码: 01 :action数量|00：无动作
Action_code15 = 01|53

; WAIT_VC_CE(51)
;等待C1，出口清EF04--出口
;--------------0-1---2----3----4----5----6----7----8----9---10---11---12---13---14---15
Condition16 = 16|1|0xC1|0x33|0x04|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA
;APDU_NUM
Apdu16_num = 3
;Apdu_type SELECT_EF04_FILE(54)
Apdu16_type = 54
;Apdu_type CLEAR_EF04_WITH_DFFSET_SUCC(79)
Apdu16_type_02 = 79
;Apdu_type CLEAR_EF04_WITH_DFFSET_SUM(80)
Apdu16_type_03 = 80
;修改交易状态:  WAIT_OBU_SELECT_CLEAR_EF04_RS(58)
Modification_business_status16 = 58
;执行动作代码: 01 :action数量|00：无动作
Action_code16 = 00|00

; WAIT_VC_CE(51)
;下CA，根据偏移和长度读EF04
;--------------0-1---2----3----4----5----6----7----8----9---10---11---12---13---14---15
Condition17 = 16|1|0xCA|0x33|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA
;APDU_NUM
Apdu17_num = 2
;Apdu_type SELECT_EF04_FILE(54)
Apdu17_type = 54
;Apdu_type Read_EF04_FILE2(77)
Apdu17_type_02 = 78
;修改交易状态:  WAIT_OBU_SELECT_READ_EF04_RQ(54)
Modification_business_status17 = 54
;执行动作代码: 01 :action数量|00：无动作
Action_code17 = 00|00


;WAIT_OBU_SELECT_CLEAR_EF04_RQ(57)
;上B7收到C1后清EF04拆分信息
;--------------0-1---2----3----4----5----6----7----8----9---10---11---12---13---14---15
Condition18 = 16|1|0xC1|0x39|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA
;APDU_NUM
Apdu18_num = 3
;Apdu_type SELECT_EF04_FILE(54)
Apdu18_type = 54
;Apdu_type CLEAR_EF04_WITH_DFFSET_SUCC(79)
Apdu18_type_02 = 79
;Apdu_type CLEAR_EF04_WITH_DFFSET_SUM(80)
Apdu18_type_03 = 80
;修改交易状态:  WAIT_OBU_SELECT_CLEAR_EF04_RS(58)
Modification_business_status18 = 58
;执行动作代码: 01 :action数量|00：无动作
Action_code18 = 00|00



[Transfer解帧配置]
Transfer解帧配置个数 = 21
;适用条件的数量
;适用条件1:适用的交易状态: 
;适用条件2:出入口状态: 0xAA: 无此适用条件区分 03: 入口 04: 出口 08: 合建站|
;适用条件3:军车状态:  0xAA: 无此适用条件区s分 00: 非军车 01: 军车|
;适用条件4:OBU省份状态: 0xAA: 无此适用条件区分 01: 本省 02: 外省
;适用条件5:Card_type 0xAA: 无此适用条件区分 01: GBCar、02:4xCard
;适用条件6:标识站读取类型  8bit: 00000111 低三位分别代表读取0009、0008、EF04
;适用条件7:标识站清除类型  8bit: 00000111 低三位分别代表清除0009、0008、EF04
;适用条件8:再次读取标识站信息: 0xAA: 无此适用条件区分，00不读 01再次读取/EF04标识站读取,02-EF04标识站+省界站读取,03-EF04省界站读取
;适用条件9:开0009文件目录: 0xAA: 无此适用条件区分 00不开 01开
;适用条件10:开ef04文件目录: 0xAA: 无此适用条件区分 00不开 01开
;适用条件11:写001C标志
;适用条件12:写EF04与复合消费标志：0xAA: 无此适用条件区分 00-写EF04+复合消费 01-仅写EF04 02-仅进行复合消费 03-复合消费上报B5后写EF04

;WAIT_OBU_READICC19_RS(4)
;读0019,02回复,下一步上报B4
;-------------0---1---2-----3----4----5----6---7----8----9----10---11---12
Condition1 = 13|0x04|0xAA|0xAA|0xAA|0x01|0x00|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA
;APDU_NUM
Apdu1_num = 2
;Apdu_type OBU_READICC19_RS(2)
Apdu1_type = 2
;Apdu_type CHECK_BALANCE_RS(6)
Apdu1_type_02 = 6
;修改交易状态: WAIT_VC_C6(13)
Modification_business_status1 = 13
;执行动作代码: 01 :action数量|TRANSFER_RQ_ACTON(51)
Action_code1 = 00|00
;是否组PC帧 00:不组帧 01: 组帧
VC_framing1 = 01
;组PC帧类型
VC_frame1_type = 0x48

;WAIT_OBU_READICC19_RS(4)
;读0019,02,0015回复,下一步上报B4
;-------------0---1---2-----3----4----5----6---7----8----9----10---11---12
Condition2 = 13|0x04|0xAA|0xAA|0xAA|0x02|0x00|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA
;APDU_NUM
Apdu2_num = 3
;Apdu_type OBU_READICC19_RS(2)
Apdu2_type = 2
;Apdu_type CHECK_BALANCE_RS(6)
Apdu2_type_02 = 6
;Apdu_type OBU_READICC15_RS(18)
Apdu2_type_03 = 18
;修改交易状态: WAIT_VC_C6(13)
Modification_business_status2 = 13
;执行动作代码: 01 :action数量|TRANSFER_RQ_ACTON(51)
Action_code2 = 00|00
;是否组PC帧 00:不组帧 01: 组帧
VC_framing2 = 01
;组PC帧类型
VC_frame2_type = 0x48

;WAIT_OBU_READICC19_RS(4)
;读0019,02回复,下一步读EF04
;-------------0---1---2-----3----4----5----6---7----8----9----10---11---12
Condition3 = 13|0x04|0xAA|0xAA|0xAA|0x01|0x01|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA
;APDU_NUM
Apdu3_num = 2
;Apdu_type OBU_READICC19_RS(2)
Apdu3_type = 2
;Apdu_type CHECK_BALANCE_RS(6)
Apdu3_type_02 = 6
;修改交易状态: WAIT_OBU_READESAM04_RQ(5)
Modification_business_status3 = 5
;执行动作代码: 01 :action数量|TRANSFER_RQ_ACTON(51)
Action_code3 = 01|51
;是否组PC帧 00:不组帧 01: 组帧
VC_framing3 = 00
;组PC帧类型
VC_frame3_type = 0x48

;WAIT_OBU_READICC19_RS(4)
;读0019,02,0015回复,下一步读EF04
;-------------0---1---2-----3----4----5----6---7----8----9----10---11---12
Condition4 = 13|0x04|0xAA|0xAA|0xAA|0x02|0x01|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA
;APDU_NUM
Apdu4_num = 3
;Apdu_type OBU_READICC19_RS(2)
Apdu4_type = 2
;Apdu_type CHECK_BALANCE_RS(6)
Apdu4_type_02 = 6
;Apdu_type OBU_READICC15_RS(18)
Apdu4_type_03 = 18
;修改交易状态: WAIT_OBU_READESAM04_RQ(5)
Modification_business_status4 = 5
;执行动作代码: 01 :action数量|TRANSFER_RQ_ACTON(51)
Action_code4 = 01|51
;是否组PC帧 00:不组帧 01: 组帧
VC_framing4 = 00
;组PC帧类型
VC_frame4_type = 0x48


;WAIT_OBU_READESAM04_RS(6)
;读EF04返回，开目录，不再次读取
;-------------0---1---2-----3----4----5----6---7-----8----9---10---11---12
Condition5 = 13|0x06|0xAA|0xAA|0xAA|0xAA|0x01|0xAA|0x00|0xAA|0xAA|0xAA|0xAA|0xAA
;APDU_NUM
Apdu5_num = 2
;Apdu_type OBU_SELECT_EF04_RS(16)
Apdu5_type = 16
;Apdu_type OBU_READESAM04_RS(01)
Apdu5_type_02 = 1
;修改交易状态: WAIT_VC_C6(13)
Modification_business_status5 = 13
;执行动作代码: 01 :action数量|51:TRANSFER_RQ_ACTON
Action_code5 = 00|00
;是否组PC帧 00:不组帧 01: 组帧
VC_framing5 = 01
;组PC帧类型
VC_frame5_type = 0x48

;WAIT_OBU_READESAM04_RS(6)
;读EF04返回，开目录，再次读取
;-------------0---1---2-----3----4----5----6---7-----8----9---10---11---12
Condition6 = 13|0x06|0xAA|0xAA|0xAA|0xAA|0x01|0xAA|0x01|0xAA|0xAA|0xAA|0xAA|0xAA
;APDU_NUM
Apdu6_num = 2
;Apdu_type OBU_SELECT_EF04_RS(16)
Apdu6_type = 16
;Apdu_type OBU_READESAM04_RS(01)
Apdu6_type_02 = 1
;修改交易状态: WAIT_OBU_READESAM04_RQ(5)
Modification_business_status6 = 5
;执行动作代码: 01 :action数量|51:TRANSFER_RQ_ACTON
Action_code6 = 01|51
;是否组PC帧 00:不组帧 01: 组帧
VC_framing6 = 00
;组PC帧类型
VC_frame6_type = 0x48

;------------------------------下发B4后-------------------------------------------------------------------------------------------------
;WAIT_OBU_SELECT_READ_EF04_RS(40)
;选EF04目录返回，下一步写EF04
;-------------0---1---2-----3----4----5----6---7----8----9----10---11---12
Condition7 = 13|0x28|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0x01|0xAA|0xAA|0xAA|0xAA|0xAA
;APDU_NUM
Apdu7_num = 2
;Apdu_type OBU_SELECT_EF04_RS(16)
Apdu7_type = 16
;Apdu_type OBU_WRITE_EF04_RS(31)
Apdu7_type_02 = 31
;修改交易状态:  WAIT_OBU_WRITE_EF04_RQ(52)
Modification_business_status7 = 52
;执行动作代码: 00 :action数量|00:等待OBU回复
Action_code7 = 01|51
;是否组PC帧 00:不组帧 01: 组帧
VC_framing7 = 00
;组PC帧类型
VC_frame7_type = 0x58


;WAIT_OBU_SELECT_READ_EF04_RS(40)
;选EF04目录返回，下一步消费初始化--模式0
;-------------0---1---2-----3----4----5----6---7----8----9----10---11---12
Condition8 = 13|0x28|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0x00|0xAA|0xAA|0xAA|0x00|0xAA
;APDU_NUM
Apdu8_num = 2
;Apdu_type OBU_SELECT_EF04_RS(16)
Apdu8_type = 16
;Apdu_type OBU_WRITE_EF04_RS(31)
Apdu8_type_02 = 31
;修改交易状态:  WAIT_VC_PAY_INIT_RQ(14)
Modification_business_status8 = 14
;执行动作代码: 00 :action数量|00:等待OBU回复
Action_code8 = 01|51
;是否组PC帧 00:不组帧 01: 组帧
VC_framing8 = 00
;组PC帧类型
VC_frame8_type = 0x58

;WAIT_OBU_WRITE_EF04_RS(53)
;写EF04返回，下一步消费初始化--模式0
;-------------0---1---2-----3----4----5----6---7----8----9----10---11---12
Condition9 = 13|0x35|0x03|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0x00|0xAA
;APDU_NUM
Apdu9_num = 1
;Apdu_type OBU_WRITE_EF04_RS(31)
Apdu9_type = 31
;修改交易状态:  WAIT_VC_PAY_INIT_RQ(14)
Modification_business_status9 = 14
;执行动作代码: 00 :action数量|00:等待OBU回复
Action_code9 = 01|51
;是否组PC帧 00:不组帧 01: 组帧
VC_framing9 = 00
;组PC帧类型
VC_frame9_type = 0x58

;WAIT_OBU_SELECT_READ_EF04_RS(40)
;选EF04目录返回，下一步上B5--模式1
;-------------0---1---2-----3----4----5----6---7----8----9----10---11---12
Condition10 = 13|0x28|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0x00|0xAA|0xAA|0xAA|0x01|0xAA
;APDU_NUM
Apdu10_num = 2
;Apdu_type OBU_SELECT_EF04_RS(16)
Apdu10_type = 16
;Apdu_type OBU_WRITE_EF04_RS(31)
Apdu10_type_02 = 31
;修改交易状态:  WAIT_VC_CE(51)
Modification_business_status10 = 51
;执行动作代码: 00 :action数量|FILL_B5_DATA(13)
Action_code10 = 02|13|150
;是否组PC帧 00:不组帧 01: 组帧
VC_framing10 = 01
;组PC帧类型
VC_frame10_type = 0x58

;WAIT_OBU_SELECT_READ_EF04_RS(40)
;选EF04目录返回，下一步上B5--模式3
;-------------0---1---2-----3----4----5----6---7----8----9----10---11---12
Condition11 = 13|0x28|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0x00|0xAA|0xAA|0xAA|0x03|0xAA
;APDU_NUM
Apdu11_num = 2
;Apdu_type OBU_SELECT_EF04_RS(16)
Apdu11_type = 16
;Apdu_type OBU_WRITE_EF04_RS(31)
Apdu11_type_02 = 31
;修改交易状态:  WAIT_VC_CE(51)
Modification_business_status11 = 51
;执行动作代码: 00 :action数量|FILL_B5_DATA(13)
Action_code11 = 00|00
;是否组PC帧 00:不组帧 01: 组帧
VC_framing11 = 01
;组PC帧类型
VC_frame11_type = 0x58


;WAIT_OBU_WRITE_EF04_RS(53)
;写EF04返回，下一步上报B5--模式1
;-------------0---1---2-----3----4----5----6---7----8----9----10---11---12
Condition12 = 13|0x35|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0x01|0xAA
;APDU_NUM
Apdu12_num = 1
;Apdu_type OBU_WRITE_EF04_RS(31)
Apdu12_type = 31
;修改交易状态:  WAIT_VC_CE(51)
Modification_business_status12 = 51
;执行动作代码: 00 :action数量|FILL_B5_DATA(13)
Action_code12 = 02|13|150
;是否组PC帧 00:不组帧 01: 组帧
VC_framing12 = 01
;组PC帧类型
VC_frame12_type = 0x58

;WAIT_OBU_WRITE_EF04_RS(53)
;写EF04返回，下一步上报B5--模式3
;-------------0---1---2-----3----4----5----6---7----8----9----10---11---12
Condition13 = 13|0x35|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0x03|0xAA
;APDU_NUM
Apdu13_num = 1
;Apdu_type OBU_WRITE_EF04_RS(31)
Apdu13_type = 31
;修改交易状态:  WAIT_VC_CE(51)
Modification_business_status13 = 51
;执行动作代码: 00 :action数量|FILL_B5_DATA(13)
Action_code13 = 00|00
;是否组PC帧 00:不组帧 01: 组帧
VC_framing13 = 01
;组PC帧类型
VC_frame13_type = 0x58

;消费初始化，写0019号文件 - 回复
;WAIT_OBU_PAY_NINT_RS(15)
;-------------0---1---2-----3----4----5----6---7----8----9----10---11---12
Condition14 = 13|0x0F|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA
;APDU_NUM
Apdu14_num = 2
;Apdu_type OBU_PAY_INIT_RS(3)
Apdu14_type = 3
;Apdu_type OBU_PAY_WRITE0019_RS(4)
Apdu14_type_02 = 4
;修改交易状态: WAIT_VC_PAY_RQ(28)
Modification_business_status14 = 28
;执行动作代码: 00 :action数量|00:等待OBU回复
Action_code14 = 01|51
;是否组PC帧 00:不组帧 01: 组帧
VC_framing14 = 00
;组PC帧类型
VC_frame14_type = 0x58

;扣费取余额 - 回复
;WAIT_OBU_PAY_RS(29)-扣费后写EF04-模式3
;-------------0---1---2-----3----4----5----6---7----8----9----10---11---12
Condition15 = 13|0x1D|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0x03|0xAA
;APDU_NUM
Apdu15_num = 2
;Apdu_type OBU_PAY_RS(5)
Apdu15_type = 5
;Apdu_type OBU_CHECK_BALANCE_RS(6)
Apdu15_type_02 = 6
;修改交易状态: WAIT_OBU_CLEAR_ESM04_RQ(16)
Modification_business_status15 = 16
;执行动作代码: 01 :action数量|TRANSFER_RQ_ACTON(51)
Action_code15 = 01|51
;是否组PC帧 00:不组帧 01: 组帧
VC_framing15 = 00
;组PC帧类型
VC_frame15_type = 0x58

;扣费取余额 - 回复
;WAIT_OBU_PAY_RS(29)-扣费后上B5-模式0
;-------------0---1---2-----3----4----5----6---7----8----9----10---11---12
Condition16 = 13|0x1D|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0x00|0xAA
;APDU_NUM
Apdu16_num = 2
;Apdu_type OBU_PAY_RS(5)
Apdu16_type = 5
;Apdu_type OBU_CHECK_BALANCE_RS(6)
Apdu16_type_02 = 6
;修改交易状态: WAIT_VC_CE(51)
Modification_business_status16 = 51
;执行动作代码: 01 :action数量|SETMMI_RQ_ACTION(53)
Action_code16 = 00|00
;是否组PC帧 00:不组帧 01: 组帧
VC_framing16 = 01
;组PC帧类型
VC_frame16_type = 0x58

;扣费取余额 - 回复
;WAIT_OBU_PAY_RS(29)-扣费后上B5-模式2
;-------------0---1---2-----3----4----5----6---7----8----9----10---11---12
Condition17 = 13|0x1D|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0x02|0xAA
;APDU_NUM
Apdu17_num = 2
;Apdu_type OBU_PAY_RS(5)
Apdu17_type = 5
;Apdu_type OBU_CHECK_BALANCE_RS(6)
Apdu17_type_02 = 6
;修改交易状态: WAIT_VC_CE(51)
Modification_business_status17 = 51
;执行动作代码: 01 :action数量|SETMMI_RQ_ACTION(53)
Action_code17 = 00|00
;是否组PC帧 00:不组帧 01: 组帧
VC_framing17 = 01
;组PC帧类型
VC_frame17_type = 0x59

;获取TAC初始化回复
;WAIT_OBU_PAY_INIT_FOR_TAC_RS(35)
;-------------0---1---2-----3----4----5----6---7----8----9----10---11---12
Condition18 = 13|0x23|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA
;APDU_NUM
Apdu18_num = 1
;Apdu_type OBU_GET_TAC_INIT_RS(7)
Apdu18_type = 7
;修改交易状态: WAIT_OBU_GET_TAC_RQ(31)
Modification_business_status18 = 31
;执行动作代码: 01 :action数量|TRANSFER_RQ_ACTON(51)
Action_code18 = 01|51
;是否组PC帧 00:不组帧 01: 组帧
VC_framing18 = 00
;组PC帧类型
VC_frame18_type = 0x58


;获取TAC回复--上B5
;WAIT_OBU_GET_TAC_RS(36)
;-------------0---1---2-----3----4----5----6---7----8----9----10---11---12
Condition19 = 13|0x24|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA
;APDU_NUM
Apdu19_num = 1
;Apdu_type OBU_GET_TAC_RS(8)
Apdu19_type = 8
;修改交易状态: WAIT_VC_CE(51)
Modification_business_status19 = 51
;执行动作代码: 01 :action数量|TRANSFER_RQ_ACTON(51)
Action_code19 = 00|00
;是否组PC帧 00:不组帧 01: 组帧
VC_framing19 = 01
;组PC帧类型
VC_frame19_type = 0x58

;-------------------------下发B5后-------------------------------------------------------------------------------------

;WAIT_OBU_SELECT_EF04_RQ(54)
;读拆分信息回复--上B9
;-------------0---1---2-----3----4----5----6---7----8----9----10---11---12
Condition20 = 13|0x36|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA
;APDU_NUM
Apdu20_num = 2
;Apdu_type OBU_SELECT_EF04_RS(16)
Apdu20_type = 16
;OBU_READESAM04_RS(01)
Apdu20_type_02 = 1
;修改交易状态：WAIT_OBU_SELECT_CLEAR_EF04_RQ(57)
Modification_business_status20 = 57
;执行动作代码：01 :action数量|TRANSFER_RQ_ACTON(51)
Action_code20 = 00|00
;是否组PC帧 00:不组帧 01：组帧
VC_framing20 = 01
;组PC帧类型
VC_frame20_type = 0x18

;WAIT_OBU_SELECT_CLEAR_EF04_RS(58)
;清拆分信息回复
;-------------0---1---2-----3----4----5----6---7----8----9----10---11---12
Condition21 = 13|0x3A|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA|0xAA
;APDU_NUM
Apdu21_num = 3
;Apdu_type OBU_SELECT_EF04_RS(16)
Apdu21_type = 16
;Apdu_type OBU_CLEAR_EF04_RS(13)
Apdu21_type_02 = 13
;Apdu_type OBU_CLEAR_EF04_RS(13)
Apdu21_type_03 = 13
;修改交易状态：WAIT_OBU_SETMMI_RS(33)
Modification_business_status21 = 33
;执行动作代码：01 :action数量|53:下SETMMI
Action_code21 = 01|53
;是否组PC帧 00:不组帧 01：组帧
VC_framing21 = 00
;组PC帧类型
VC_frame21_type = 0x00

[错误码配置]
ErrorCodeCount = 39
ERROR_CODE_01 = 20 |PSAM忙
ERROR_CODE_02 = 21 |PSAM处理失败 
ERROR_CODE_03 = 22|天线状态机异常
ERROR_CODE_04 = 23|鉴别码校验失败
ERROR_CODE_05 = 5 |PSAM初始化失败
ERROR_CODE_06 = 6 |回复APDU数量异常
ERROR_CODE_07 = 2 |读0019响应非9000
ERROR_CODE_08 = 25|读0015文件非9000
ERROR_CODE_09 = 1 |读EF04非9000
ERROR_CODE_10 = 38|开EF04目录失败
ERROR_CODE_11 = 13|清EF04失败 
ERROR_CODE_12 = 3|消费初始化非9000
ERROR_CODE_13 = 26|读0019文件出错
ERROR_CODE_14 = 27|写0019非9000
ERROR_CODE_15 = 15|读000A文件出错
ERROR_CODE_16 = 16|写000A非9000
ERROR_CODE_17 = 17|PSAM消费初始化异常
ERROR_CODE_18 = 4|PSAM计算MAC1失败
ERROR_CODE_19 = 9|符合消费回复非9000
ERROR_CODE_20 = 28|读0002回复非9000
ERROR_CODE_21 = 29|取IC卡随机数回复非9000
ERROR_CODE_22 = 30|外部认证失败 
ERROR_CODE_23 = 7|计算MAC2校验失败
ERROR_CODE_24 = 12|清0008文件失败
ERROR_CODE_25 = 8|DSRC交易超时
ERROR_CODE_26 = 31|VC重发超时
ERROR_CODE_27 = 32|OBUID不匹配
ERROR_CODE_28 = 24|读0008文件长度异常
ERROR_CODE_29 = 10|读0008文件非9000
ERROR_CODE_30 = 33|开0009文件目录失败       
ERROR_CODE_31 = 34|读0009文件长度异常
ERROR_CODE_32 = 35|读0009文件非9000
ERROR_CODE_33 = 14|清0009文件失败
ERROR_CODE_34 = 36|读0011文件非9000
ERROR_CODE_35 = 37|读001B文件非9000
ERROR_CODE_36 = 39|取TAC码回复非9000
ERROR_CODE_37 = 40|读000C文件非9000
ERROR_CODE_38 = 41|PIN码校验非9000
ERROR_CODE_39 = 42|读0018文件非9000
ERROR_CODE_40 = 00|不配置
ERROR_CODE_41 = 00|不配置
ERROR_CODE_42 = 00|不配置
ERROR_CODE_43 = 00|不配置
ERROR_CODE_44 = 00|不配置
ERROR_CODE_45 = 01|读EF04文件超时